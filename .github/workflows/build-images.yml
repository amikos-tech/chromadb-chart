name: Build Images

on:
  push:
    branches:
      - release
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "ghcr.io/amikos-tech/chromadb-chart/chroma"
  LATEST_VERSION: "0.4.24"

jobs:
  build-images:
    strategy:
      matrix:
        chroma-version:
          [
            0.4.7, #auth introduced
            0.4.8, #auth introduced
            0.4.10, #pre-flight checks introduced
            0.4.16, #multi-tenancy introduced
            0.4.21,
            0.4.22,
            0.4.23,
            0.4.24,
          ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push release Docker image
        uses: docker/build-push-action@v3.2.0
        if: ${{ env.LATEST_VERSION == matrix.chroma-version }}
        with:
          context: .
          file: image/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            CHROMA_VERSION=${{ matrix.chroma-version }}
          tags: "${{ env.IMAGE_NAME }}:${{ matrix.chroma-version }},${{ env.IMAGE_NAME }}:latest"
      - name: Build and push release Docker image
        if: ${{ env.LATEST_VERSION != matrix.chroma-version }}
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: image/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            CHROMA_VERSION=${{ matrix.chroma-version }}
          tags: "${{ env.IMAGE_NAME }}:${{ matrix.chroma-version }}"
